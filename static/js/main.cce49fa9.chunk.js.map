{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isVisible","isReversed","sortBy","NONE","visibleGoodsList","setState","reverse","reset","sortType","getReorderedGoods","visibleGoods","LENGTH","sort","good","prevGood","length","ALPABET","localeCompare","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBKA,E,2EAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,SAYCE,E,4MACJC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,OAAQN,EAASO,M,EAGnBC,iBAAmB,WACjB,EAAKC,UAAS,SAACN,GAAD,MAAY,CACxBC,WAAYD,EAAMC,e,EAItBM,QAAU,WACR,EAAKD,UAAS,SAACN,GAAD,MAAY,CACxBE,YAAaF,EAAME,gB,EAIvBM,MAAQ,WACN,EAAKF,UAAS,iBAAO,CACnBL,WAAW,EACXC,YAAY,EACZC,OAAQN,EAASO,U,EAIrBD,OAAS,SAACM,GACR,EAAKH,SAAS,CACZH,OAAQM,K,EAIZC,kBAAoB,SAACC,GACnB,MAA+B,EAAKX,MAA5BG,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,WAEhB,OAAQC,GACN,KAAKN,EAASe,OACZD,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAoBD,EAAKE,OAASD,EAASC,UAC7D,MAEF,KAAKnB,EAASoB,QACZN,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAoBD,EAAKI,cAAcH,MAU7D,OAJIb,GACFS,EAAaJ,UAGRI,G,4CAGT,WAA0B,IAAD,OAErBV,EACEkB,KAAKnB,MADPC,UAGF,OACE,sBAAKmB,UAAU,MAAf,WACInB,GACA,wBACEmB,UAAU,gCACVC,KAAK,SACLC,QAASH,KAAKd,iBAHhB,mBASDJ,GACC,sBAAKmB,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SACID,KAAKT,kBAAkBZ,GAAiByB,KAAI,SAACT,GAAD,OAC5C,oBAAIM,UAAU,cAAd,SACGN,GAD8BA,QAMrC,sBAAKM,UAAU,mBAAf,UACE,wBACEA,UAAU,kCACVC,KAAK,SACLC,QAASH,KAAKZ,QAHhB,qBAQA,wBACEa,UAAU,gCACVC,KAAK,SACLC,QAASH,KAAKX,MAHhB,mBAQA,wBACEY,UAAU,iCACVC,KAAK,SACLC,QAAS,kBAAM,EAAKnB,OAAON,EAASe,SAHtC,4BAQA,wBACEQ,UAAU,mCACVC,KAAK,SACLC,QAAS,kBAAM,EAAKnB,OAAON,EAASoB,UAHtC,8C,GA3GIO,IAAMC,WA0HT1B,ICnJf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cce49fa9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isVisible: boolean,\n  isReversed: boolean,\n  sortBy: SortType,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isVisible: false,\n    isReversed: false,\n    sortBy: SortType.NONE,\n  };\n\n  visibleGoodsList = () => {\n    this.setState((state) => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isVisible: false,\n      isReversed: false,\n      sortBy: SortType.NONE,\n    }));\n  };\n\n  sortBy = (sortType: SortType) => {\n    this.setState({\n      sortBy: sortType,\n    });\n  };\n\n  getReorderedGoods = (visibleGoods: string[]) => {\n    const { sortBy, isReversed } = this.state;\n\n    switch (sortBy) {\n      case SortType.LENGTH:\n        visibleGoods.sort((good, prevGood) => good.length - prevGood.length);\n        break;\n\n      case SortType.ALPABET:\n        visibleGoods.sort((good, prevGood) => good.localeCompare(prevGood));\n        break;\n\n      default:\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  render():React.ReactNode {\n    const {\n      isVisible,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!isVisible && (\n          <button\n            className=\"button buttons__forSort-start\"\n            type=\"button\"\n            onClick={this.visibleGoodsList}\n          >\n            Start\n          </button>\n        )}\n\n        {isVisible && (\n          <div className=\"Goods\">\n            <ul className=\"Goods__list\">\n              {(this.getReorderedGoods(goodsFromServer).map((good) => (\n                <li className=\"Goods__item\" key={good}>\n                  {good}\n                </li>\n              )))}\n            </ul>\n\n            <div className=\"buttons__forSort\">\n              <button\n                className=\"button buttons__forSort-reverse\"\n                type=\"button\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"button buttons__forSort-reset\"\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n\n              <button\n                className=\"button buttons__forSort-length\"\n                type=\"button\"\n                onClick={() => this.sortBy(SortType.LENGTH)}\n              >\n                Sort By Length\n              </button>\n\n              <button\n                className=\"button buttons__forSort-alphabet\"\n                type=\"button\"\n                onClick={() => this.sortBy(SortType.ALPABET)}\n              >\n                Sort alphabetically\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}